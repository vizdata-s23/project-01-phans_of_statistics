{
  "hash": "4ba3d49b6956aa9cf01800e40209d20f",
  "result": {
    "markdown": "---\ntitle: \"Proposal for Eurovision Data Visualization Report\"\nsubtitle: \"Federico Arboleda, Ryan Hu, Chandler Naylon, Aryan Poonacha\"\nformat: html\neditor: visual\nexecute:\n  echo: false\n  warning: false\n---\n\n::: {.cell}\n\n:::\n\n\n# Dataset\n\nEurovision is an international public song performance competition between European countries. Each country submits a song that is to be performed live to a centralized committee that plays the song over a common broadcast, and each country then votes on the other countries' songs. As of 2022, at least 52 countries have participated at least once. The competition has cemented itself as a periodic staple for each country to present a culturally significant piece on an international stage.\n\nThe dataset consists of every song and contestant performed in Eurovision history, along with all the associated data - year, host city and country, points received, final rank, etc. It contains 2005 observations and 18 variables. The accompanying eurovision-votes.csv maintains a tally of which countries voted for which other countries in each year of the contest.\n\nWe chose this dataset because it contains a substantial mix of both numerical and categorical variables with little missing data, giving us significant freedom to create different visualizations. We also liked that the data was arranged by year, dating back to the first Eurovision in 1956, which will allow us to visualize relationships over time. Finally, since America does not participate in Eurovision and consequently gives the competition minimal publicity, we are excited to educate our audience on a largely unfamiliar topic.\n\n# Questions\n\nThe two questions we want to answer are:\n\n1.  Is there a home country advantage in Eurovision?\n\n2.  Does the order in which contestants perform affect their success?\n\n# Analysis Plan\n\nOur first question asks if contestants from the `host_country` in each competition tend to perform better than foreign contestants. We will visualize this relationship (or lack thereof) by first creating a binary variable called `from_host_country` for each observation that indicates whether the contestant was competing in their home country (done by matching the `host_country` and `artist_country` variables and returning \"true\" if a match, and \"false\" if not). From there, we can use our first plot as a histogram of `total_points` or final `rank` of host country participants faceted by decade to look at whether home country advantage was more prevalent in certain eras than others. Furthermore, we can use `total_points` or `rank` for each contestant as a measure of success and compare the distributions of these metrics between host country participants and non-host country participants in our second plot through a histogram faceted by whether `from_host_country`.\n\nOur second question looks at whether the `running_order` in which contestants perform has a relationship with their success in Eurovision. To do so, we plan on using the variable `running_order` to represent the order in which they perform, `year` for a temporal visualization, and either `total_points` or `rank` to represent how they perform in the competition. In addition, since there may be too many ranks to visualize concisely, we can bucket the ranks into broader categories, such as first 10, middle 10, and final 10. One plot can visualize the relationship between `running_order` and `total_points` over time using a scatter plot faceted by decade or `year`, while another plot can visualize the distribution of the `running_order` of winners over each decade, using the binary `winner` variable to filter out the data and grouping the years by decade to prevent the plot from being too crowded. The second plot would be a histogram faceted by decade.\n\nWe have not considered merging any external data for either question, but this is subject to change as we further our analysis.\n\n# References\n\nhttps://github.com/rfordatascience/tidytuesday/blob/master/data/2022/2022-05-17/readme.md\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}