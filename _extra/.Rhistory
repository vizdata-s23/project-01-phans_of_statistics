group_by(event) |>
arrange(desc(total_points), .by_group=TRUE) |>
mutate(group_row_num = row_number(event)) |>
mutate(top3 = case_when(
group_row_num == 1 ~ "First Place",
group_row_num == 2 ~ "Second Place",
group_row_num == 3 ~ "Third Place",
group_row_num > 3 ~ "Other"
)) |>
ungroup() |>
slice(1:3)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1967 ~ "1950-67",
year %in% 1968:1986 ~ "1968-85",
year %in% 1987:2005 ~ "1986-2003",
year %in% 2005:2022 ~ "2004-22")) |>
drop_na(total_points) |>
group_by(event) |>
mutate(total_points_pct = total_points / sum(total_points)) |>
ungroup() |>
group_by(decade, running_order) |>
mutate(mean_points = mean(total_points)) |>
ungroup() |>
drop_na(total_points, running_order) |>
group_by(event) |>
arrange(desc(total_points), .by_group=TRUE) |>
mutate(group_row_num = row_number(event)) |>
mutate(top3 = case_when(
group_row_num == 1 ~ "First Place",
group_row_num == 2 ~ "Second Place",
group_row_num == 3 ~ "Third Place",
group_row_num > 3 ~ "Other"
)) |>
ungroup()
View(eurovision_filt)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
#  filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1967 ~ "1950-67",
year %in% 1968:1986 ~ "1968-85",
year %in% 1987:2005 ~ "1986-2003",
year %in% 2005:2022 ~ "2004-22")) |>
drop_na(total_points) |>
group_by(event) |>
mutate(total_points_pct = total_points / sum(total_points)) |>
ungroup() |>
group_by(decade, running_order) |>
mutate(mean_points = mean(total_points)) |>
ungroup() |>
drop_na(total_points, running_order) |>
group_by(event) |>
arrange(desc(total_points), .by_group=TRUE) |>
mutate(group_row_num = row_number(event)) |>
mutate(top3 = case_when(
group_row_num == 1 ~ "First Place",
group_row_num == 2 ~ "Second Place",
group_row_num == 3 ~ "Third Place",
group_row_num > 3 ~ "Other"
)) |>
ungroup()
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no"))
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1967 ~ "1950-67",
year %in% 1968:1986 ~ "1968-85",
year %in% 1987:2005 ~ "1986-2003",
year %in% 2005:2022 ~ "2004-22"))
eurovision %>%
count(year) %>%
ggplot(aes(x = year, y = n)) +
geom_bar(stat = "identity") +
labs(x = "Year",
y = "Number of participating countries", color = "Decade",
title = "More countries have joined Eurovision over time")
# grouped by decade
euro_by_decade <- eurovision |>
filter(year != "2020") |>
mutate(decade = case_when(year %in% 1950:1959 ~ "1950s",
year %in% 1960:1969 ~ "1960s",
year %in% 1970:1979 ~ "1970s",
year %in% 1980:1989 ~ "1980s",
year %in% 1990:1999 ~ "1990s",
year %in% 2000:2009 ~ "2000s",
year %in% 2010:2019 ~ "2010s",
year %in% 2020:2022 ~ "2020s")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no"))
# grouped by more arbitrary eras (pre 80s, 80s-90s, 2000s, 2010s-present)
eurovision_eras <- eurovision |>
filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no"))
eurovision_eras |>
count(era, sort = TRUE)
eurovision_eras |>
count(from_host_country, rank, sort = TRUE)
eurovision %>%
count(year) %>%
ggplot(aes(x = year, y = n)) +
geom_bar(stat = "identity") +
labs(x = "Year",
y = "Number of participating countries", color = "Decade",
title = "More countries have joined Eurovision over time")
# grouped by decade
euro_by_decade <- eurovision |>
mutate(decade = case_when(year %in% 1950:1959 ~ "1950s",
year %in% 1960:1969 ~ "1960s",
year %in% 1970:1979 ~ "1970s",
year %in% 1980:1989 ~ "1980s",
year %in% 1990:1999 ~ "1990s",
year %in% 2000:2009 ~ "2000s",
year %in% 2010:2019 ~ "2010s",
year %in% 2020:2022 ~ "2020s")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no"))
# grouped by more arbitrary eras (pre 80s, 80s-90s, 2000s, 2010s-present)
eurovision_eras <- eurovision |>
filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no"))
eurovision_eras |>
count(era, sort = TRUE)
eurovision_eras |>
count(from_host_country, rank, sort = TRUE)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
filter(year == "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1967 ~ "1950-67",
year %in% 1968:1986 ~ "1968-85",
year %in% 1987:2005 ~ "1986-2003",
year %in% 2005:2022 ~ "2004-22"))
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
filter(year == "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1967 ~ "1950-67",
year %in% 1968:1986 ~ "1968-85",
year %in% 1987:2005 ~ "1986-2003",
year %in% 2005:2022 ~ "2004-22"))
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
filter(year !== "2020") |>
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1967 ~ "1950-67",
year %in% 1968:1986 ~ "1968-85",
year %in% 1987:2005 ~ "1986-2003",
year %in% 2005:2022 ~ "2004-22"))
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1967 ~ "1950-67",
year %in% 1968:1986 ~ "1968-85",
year %in% 1987:2005 ~ "1986-2003",
year %in% 2005:2022 ~ "2004-22"))
eurovision %>%
count(year) %>%
ggplot(aes(x = year, y = n)) +
geom_bar(stat = "identity") +
labs(x = "Year",
y = "Number of participating countries", color = "Decade",
title = "More countries have joined Eurovision over time")
# grouped by decade
euro_by_decade <- eurovision |>
filter(year != "2020") |>
mutate(decade = case_when(year %in% 1950:1959 ~ "1950s",
year %in% 1960:1969 ~ "1960s",
year %in% 1970:1979 ~ "1970s",
year %in% 1980:1989 ~ "1980s",
year %in% 1990:1999 ~ "1990s",
year %in% 2000:2009 ~ "2000s",
year %in% 2010:2019 ~ "2010s",
year %in% 2020:2022 ~ "2020s")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no"))
# grouped by more arbitrary eras (pre 80s, 80s-90s, 2000s, 2010s-present)
eurovision_eras <- eurovision |>
filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no"))
eurovision_eras |>
count(era, sort = TRUE)
eurovision_eras |>
count(from_host_country, rank, sort = TRUE)
#ggplot(eurovision_eras, aes(x = total_points, y = from_host_country)) +
#  geom_density_ridges()
euro_by_decade %>%
filter(from_host_country == "yes") %>%
ggplot(aes(x = rank, y = decade)) +
geom_density_ridges() +
labs(x = "Rank",
y = "Decade",
title = "Distribution of home country participants' ranks by decade")
#ggplot(eurovision_eras, aes(x = total_points, y = from_host_country)) +
#  geom_density_ridges()
eurovision_filt %>%
filter(from_host_country == "yes") %>%
ggplot(aes(x = rank, y = decade)) +
geom_density_ridges() +
labs(x = "Rank",
y = "Decade",
title = "Distribution of home country participants' ranks by decade")
#ggplot(eurovision_eras, aes(x = total_points, y = from_host_country)) +
#  geom_density_ridges()
euro_by_decade %>%
filter(from_host_country == "yes") %>%
ggplot(aes(x = rank, y = decade)) +
geom_density_ridges() +
labs(x = "Rank",
y = "Decade",
title = "Distribution of home country participants' ranks by decade")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1959 ~ "1950s",
year %in% 1960:1969 ~ "1960s",
year %in% 1970:1979 ~ "1970s",
year %in% 1980:1989 ~ "1980s",
year %in% 1990:1999 ~ "1990s",
year %in% 2000:2009 ~ "2000s",
year %in% 2010:2019 ~ "2010s",
year %in% 2020:2022 ~ "2020s"))
#ggplot(eurovision_eras, aes(x = total_points, y = from_host_country)) +
#  geom_density_ridges()
eurovision_filt %>%
filter(from_host_country == "yes") %>%
ggplot(aes(x = rank, y = decade)) +
geom_density_ridges() +
labs(x = "Rank",
y = "Decade",
title = "Distribution of home country participants' ranks by decade")
eurovision %>%
count(year) %>%
ggplot(aes(x = year, y = n)) +
geom_bar(stat = "identity") +
labs(x = "Year",
y = "Number of participating countries", color = "Decade",
title = "More countries have joined Eurovision over time")
eurovision_eras |>
count(era, sort = TRUE)
eurovision_eras |>
count(from_host_country, rank, sort = TRUE)
#ggplot(eurovision_eras, aes(x = total_points, y = from_host_country)) +
#  geom_density_ridges()
eurovision_filt %>%
filter(from_host_country == "yes") %>%
ggplot(aes(x = rank, y = decade)) +
geom_density_ridges() +
labs(x = "Rank",
y = "Decade",
title = "Distribution of home country participants' ranks by decade")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1959 ~ "1950s",
year %in% 1960:1969 ~ "1960s",
year %in% 1970:1979 ~ "1970s",
year %in% 1980:1989 ~ "1980s",
year %in% 1990:1999 ~ "1990s",
year %in% 2000:2009 ~ "2000s",
year %in% 2010:2019 ~ "2010s",
year %in% 2020:2022 ~ "2020s"))
eurovision %>%
count(year) %>%
ggplot(aes(x = year, y = n)) +
geom_bar(stat = "identity") +
labs(x = "Year",
y = "Number of participating countries", color = "Decade",
title = "More countries have joined Eurovision over time")
eurovision_eras |>
count(era, sort = TRUE)
eurovision_eras |>
count(from_host_country, rank, sort = TRUE)
#ggplot(eurovision_eras, aes(x = total_points, y = from_host_country)) +
#  geom_density_ridges()
eurovision_filt %>%
filter(from_host_country == "yes") %>%
ggplot(aes(x = rank, y = decade)) +
geom_density_ridges() +
labs(x = "Rank",
y = "Decade",
title = "Distribution of home country participants' ranks by decade")
# Plot distribution of total points by from_host_country
ggplot(eurovision_filt, aes(x = total_points, fill = from_host_country)) +
geom_histogram(binwidth = 10, alpha = 0.5, position = "identity") +
labs(title = "Distribution of Total Points by from_host_country",
x = "Total Points", y = "Count") +
facet_wrap(~ from_host_country)
# Plot distribution of rank by from_host_country
ggplot(eurovision_filt, aes(x = rank, fill = from_host_country)) +
geom_histogram(binwidth = 5, alpha = 0.5, position = "identity") +
labs(title = "Distribution of Rank by from_host_country",
x = "Rank", y = "Count") +
facet_wrap(~ from_host_country)
#violin plot
ggplot(eurovision_filt, aes(x = from_host_country, y = total_points,
fill = from_host_country)) +
geom_violin(trim = FALSE, scale = "count", alpha = 0.7) +
geom_boxplot(width = 0.2, fill = "white", outlier.shape = NA) +
labs(title = "Distribution of Total Points by from_host_country",
x = "from_host_country", y = "Total Points") +
scale_fill_manual(values = c("#f47b6e", "#6baed6"),
name = "From Host Country") +
theme_minimal() +
theme(legend.position = "top",
axis.title.y = element_text(margin = margin(r = 10))) +
coord_flip()
#the 3 above plots are very skewed bc of more observations in "no" than "yes" for from_home_country; so instead we do:
ggplot(eurovision_filt, aes(x = total_points, fill = from_host_country)) +
geom_density(alpha = 0.5, size = 1.2) +
labs(title = "Distribution of Total Points by from_host_country",
x = "Total Points", y = "Density") +
scale_fill_manual(values = c("#f47b6e", "#6baed6"),
name = "From Host Country") +
theme_minimal()
# set.seed(123)
# ggplot(euro_decades, aes(x = running_order, y = total_points)) +
#   geom_jitter(aes(color = decade), alpha = 0.5) +
#   geom_text(data = eurovision_text,
#             aes(label = artist),
#             nudge_x = -2.8,
#             size = 6) +
#   theme_grey() +
#   theme(panel.border = element_blank(),
#         axis.title = element_text(size = 15),
#         plot.title = element_text(size = 20),
#         plot.subtitle = element_text(size = 18)) +
#   geom_smooth(method = lm, size = 2.5, color = "black", se = FALSE,
#               aes(group = decade)) +
#   geom_smooth(method = "lm", aes(color = decade)) +
#   labs(x = "Running order", y = "Total points", color = "Decade",
#        title = "Total points earned by Eurovision contestants by running order",
#        subtitle = "By decade of competition") +
#   theme_minimal()
euro_era <- eurovision_filt |>
group_by(era, running_order) |>
mutate(mean_points = mean(total_points))
ggplot(euro_era, aes(x = running_order, y = mean_points, color = era)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm")
euro_places <- eurovision_filt |>
drop_na(total_points, running_order) |>
group_by(event) |>
arrange(desc(total_points), .by_group=TRUE) |>
mutate(group_row_num = row_number(event)) |>
mutate(top3 = case_when(
group_row_num == 1 ~ "First Place",
group_row_num == 2 ~ "Second Place",
group_row_num == 3 ~ "Third Place",
group_row_num > 3 ~ "Other"
)) |>
slice(1:3)
ggplot(euro_places, aes(x = year, y = running_order)) +
geom_line() +
facet_wrap(~ top3, ncol = 1) +
labs(title = "Running Order of Top Three Finishers In Eurovision Over Time",
x = "Year", y = "Running Order", color = "Placement") +
geom_smooth(method = "lm", aes(color = top3)) +
scale_color_manual(values = c("#DAA520", "#808080", "#967444")) +
theme_minimal()
library(dplyr)
library(ggplot2)
library(tidyverse)
library(ggridges)
eurovision <- read.csv("data/eurovision.csv")
eurovision_filt <- eurovision |>
filter(year != "2020") |>
mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
year %in% 1980:1999 ~ "1980-1999",
year %in% 2000:2010 ~ "2000-2010",
year %in% 2011:2022 ~ "2011-2022")) |>
mutate(from_host_country = case_when(host_country == artist_country ~ "yes",
host_country != artist_country ~ "no")) |>
mutate(decade = case_when(year %in% 1950:1959 ~ "1950s",
year %in% 1960:1969 ~ "1960s",
year %in% 1970:1979 ~ "1970s",
year %in% 1980:1989 ~ "1980s",
year %in% 1990:1999 ~ "1990s",
year %in% 2000:2009 ~ "2000s",
year %in% 2010:2019 ~ "2010s",
year %in% 2020:2022 ~ "2020s"))
eurovision |>
count(year) |>
ggplot(aes(x = year, y = n)) +
geom_bar(stat = "identity") +
labs(x = "Year",
y = "Number of participating countries", color = "Decade",
title = "More countries have joined Eurovision over time")
eurovision_filt |>
count(era, sort = TRUE)
eurovision_filt |>
count(from_host_country, rank, sort = TRUE)
