---
title: "Visualizing Factors Leading to Success in Eurovision Competitions"
subtitle: "STA/ISS 313 - Spring 2023 - Project 1"
author: "PHANs of Statistics"
title-slide-attributes:
  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg
  data-background-size: stretch
  data-slide-number: none
format: revealjs
editor: visual
execute:
  echo: false
---

```{r}
#| label: load-packages
#| include: false

# Add any additional packages you need to this chunk
# Remove any packages from this list that you're not using
library(tidyverse)
library(tidymodels)
library(palmerpenguins)
library(gt)
library(dplyr)
library(ggplot2)
library(ggridges)
```

```{r}
#| label: setup
#| include: false

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 8, 
  fig.asp = 0.618, 
  out.width = "70%"
  )
```

```{r}
#| label: load-data
#| include: false

# Load your data here
eurovision <- read_csv("data/eurovision.csv")

eurovision_filt <- eurovision |>
  filter(year != "2020") |>
  mutate(era = case_when(year %in% 1956:1979 ~ "1956-1979",
                            year %in% 1980:1999 ~ "1980-1999",
                            year %in% 2000:2010 ~ "2000-2010",
                            year %in% 2011:2022 ~ "2011-2022")) |>
  mutate(from_host_country = case_when(host_country == artist_country ~ "Yes",
                                       host_country != artist_country ~ "No")) |>
  mutate(decade = case_when(year %in% 1950:1959 ~ "1950s",
                            year %in% 1960:1969 ~ "1960s",
                            year %in% 1970:1979 ~ "1970s",
                            year %in% 1980:1989 ~ "1980s",
                            year %in% 1990:1999 ~ "1990s", 
                            year %in% 2000:2009 ~ "2000s", 
                            year %in% 2010:2019 ~ "2010s", 
                            year %in% 2020:2022 ~ "2020s")) |>
  group_by(year) |>
  mutate(num_ranks = max(rank)) |>
  ungroup() |>
  mutate(rank_pct = 1 - (rank / num_ranks)) |>
  group_by(year) |>
  mutate(num_participants = n()) |>
  ungroup() |>
  group_by(year) |>
  mutate(unweighted_pct_total_points = (total_points / sum(total_points))) |>
  ungroup() |>
  mutate(total_points_pct = (num_participants / 60) * unweighted_pct_total_points) |>
  group_by(year) |>
  mutate(running_order_group = case_when(
    running_order / max(running_order) > 2/3 ~ "End", 
    running_order / max(running_order) > 1/3 ~ "Middle", 
    running_order / max(running_order) > 0 ~ "Beginning")) |>
  mutate(running_order_group = factor(running_order_group, 
                                      levels = c("Beginning", "Middle", "End")))
```

## Introduction to the Data

# Is there a home country advantage in Eurovision?

## Host Country Vs. Non-Host Country

::: columns
::: {.column width="30%"}
-   We want to compare the distributions of normalized points/rankings between host country participants and non-host country participants
:::

::: {.column width="70%"}
```{r}
#| warning: false
#| echo: false

# plot
ggplot(eurovision_filt, aes(x = total_points, fill = from_host_country)) +
  geom_density(alpha = 0.5, linewidth = 1.2) +
  labs(title = "Distribution of Total Points by from_host_country", 
       x = "Total Points", y = "Density") +
  scale_fill_manual(values = c("#f47b6e", "#6baed6"), 
                    name = "From Host Country")
```
:::
:::

# Does the order in which contestants perform affect their success?

## Total points percentages by appearance time

::: columns
::: {.column width="100%"}
```{r}
#| warning: false
#| echo: false

ggplot(
  eurovision_filt,
  aes(x = running_order_group, y = total_points_pct,
      color = running_order_group)
) +
  geom_violin() +
  labs(
    color = "Appearance time",
    y = "Total points percentage",
    x = NULL,
    title = "Percentage of total points earned for contestants by appearance time",
    subtitle = "By era"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_blank(),
        strip.background = element_rect(fill = "grey"))
```
:::
:::

