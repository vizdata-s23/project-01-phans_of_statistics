---
title: "Visualizing Factors Leading to Success in Eurovision Competitions"
subtitle: "STA/ISS 313 - Spring 2023 - Project 1"
author: "PHANs of Statistics"
title-slide-attributes:
  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg
  data-background-size: stretch
  data-slide-number: none
format: revealjs
editor: visual
execute: 
  echo: false
  warning: false
  message: false
---

```{r}
#| label: load-packages
#| include: false

# Add any additional packages you need to this chunk
# Remove any packages from this list that you're not using
library(tidyverse)
library(tidymodels)
library(palmerpenguins)
library(gt)
library(dplyr)
library(ggplot2)
library(ggridges)
```

```{r}
#| label: setup
#| include: false

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 8, 
  fig.asp = 0.618, 
  out.width = "70%"
  )
```

```{r}
#| label: load-data
#| include: false

# Load your data here
eurovision <- read_csv("data/eurovision.csv")

eurovision_filt <- eurovision |>
  filter(year != "2020") |>
  mutate(
    era = case_when(
      year %in% 1956:1979 ~ "1956-1979",
      year %in% 1980:1999 ~ "1980-1999",
      year %in% 2000:2010 ~ "2000-2010",
      year %in% 2011:2022 ~ "2011-2022"
    ) 
  ) |>
  mutate(
    era_binary = case_when(
      year %in% 1956:2000 ~ "Pre-2000",
      year %in% 2001:2022 ~ "Post-2000"
    )
  ) |>
  mutate(
    from_host_country = case_when(
      host_country == artist_country ~ "Yes",
      host_country != artist_country ~ "No"
    )
  ) |>
  mutate(
    decade = case_when(
      year %in% 1950:1959 ~ "1950s",
      year %in% 1960:1969 ~ "1960s",
      year %in% 1970:1979 ~ "1970s",
      year %in% 1980:1989 ~ "1980s",
      year %in% 1990:1999 ~ "1990s",
      year %in% 2000:2009 ~ "2000s",
      year %in% 2010:2022 ~ "2010s-present"
    )
  ) |>
  group_by(year) |>
  mutate(num_ranks = max(rank)) |>
  ungroup() |>
  mutate(rank_pct = 1 - (rank / num_ranks)) |>
  group_by(year) |>
  mutate(num_participants = n()) |>
  ungroup() |>
  group_by(year) |>
  mutate(unweighted_prop_total_points = (total_points / sum(total_points))) |>
  ungroup() |>
  mutate(total_points_prop = (num_participants / 60) * unweighted_prop_total_points) |>
  group_by(year) |>
  mutate(
    running_order_group = case_when(
      running_order / max(running_order) > 2 / 3 ~ "End",
      running_order / max(running_order) > 1 / 3 ~ "Middle",
      running_order / max(running_order) > 0 ~ "Beginning"
    )
  ) |>
  mutate(running_order_group = factor(running_order_group,
                                      levels = c("Beginning", "Middle", "End")))
```

## Introduction to the Data

## Q1: Is there a home country advantage in Eurovision?

::: columns
::: {.column width="100%"}
```{r}
#| label: q1 first plot
#| echo: false

ggplot(eurovision_filt, aes(x = total_points_prop, fill = from_host_country)) +
  geom_density(alpha = 0.5) +
  labs(title = "Distribution of proportion of total available points",
       subtitle = "Host country vs. 'away' participants",
       x = "Proportion of total available points",
       y = "Density") +
  scale_fill_manual(values = c("#f47b6e", "#6baed6"), name = "Host country participant?") +
  theme_minimal()
```
:::
:::

## Home country advantage: A Centennial Turning Point?

::: columns
::: {.column width="100%"}
```{r}
#| label: q1 second plot
#| echo: false

eurovision_filt |>
  ggplot(aes(x = rank_pct, y = era_binary, fill = from_host_country)) +
  geom_density_ridges(alpha = 0.5) +
  labs(x = "Rank percentile",
       y = "Era",
       title = "Rank percentiles of home country and non-home country participants",
       subtitle = "By era: pre-2000 vs. post-2000") +
  theme_minimal() +
  guides(fill = guide_legend(title = "Host country participant?"))
```
:::
:::

## Q2: Does the order in which contestants perform affect their success?

::: columns
::: {.column width="100%"}
```{r}
#| label: q2 first plot
#| echo: false

ggplot(
  eurovision_filt,
  aes(x = running_order_group, y = total_points_prop,
      color = running_order_group)
) +
  geom_violin() +
  facet_wrap( ~ era_binary, nrow = 1) +
  labs(
    color = "Appearance time",
    y = "Percentage of total points",
    x = NULL,
    title = "Percentage of total points earned by contestants by appearance time",
    subtitle = "By era"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_blank(),
        strip.background = element_rect(fill = "grey"))
```
:::
:::

## Differing trends in performance order over time

```{r}
#| label: q2 data wrangling
#| include: false

euro_places <- eurovision_filt |>
  drop_na(total_points_prop, running_order) |>
  group_by(event) |>
  arrange(desc(total_points_prop), .by_group = TRUE) |>
  mutate(group_row_num = row_number(event)) |>
  mutate(top3 = case_when(group_row_num <= 3 ~ "First Three",
                          group_row_num > 3 ~ "Other")) |>
  group_by(event, top3, year) |>
  summarize(top3_final = as.numeric(paste(mean(running_order)))) |>
  arrange(year)
```

::: columns
::: {.column width="100%"}
```{r}
#| label: q2 second plot
#| echo: false
ggplot(euro_places, aes(x = year, y = top3_final, color = top3)) +
  geom_line() +
  geom_point(size = 1) +
  labs(
    title = "Performance order in Eurovision over time",
    x = "Year",
    y = "Average order of performance",
    color = "Final Place"
  ) +
  scale_color_manual(values = c("#097969", "#FA5F55")) +
  geom_smooth(method = "lm", se = FALSE) +
  theme_minimal() +
  theme(
    legend.position = c(.11, .87),
    legend.background = element_rect(
      fill = "white",
      color = "black",
      linewidth = 0.4
    )
  ) +
  guides(color = guide_legend(override.aes = list(fill = NA)))
```
:::
:::
